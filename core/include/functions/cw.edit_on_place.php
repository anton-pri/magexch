<?php
/**
 * Main validation function
 * @return an Error instance generated by error() function
 * 
 * you can hook this function for custom validation, return Error or true
 */
function cw_can_edit_on_place($token_data) {
    global $user_account;
    static $core_allowed_tables = array('domains','products','products_warehouses_amount','zones');
    $addon_allowed_tables = array();
    cw_event('on_edit_on_place_allowed_tables',array($token_data, &$addon_allowed_tables));
    $allowed_tables = array_merge($core_allowed_tables, $addon_allowed_tables);
    $valid = ($user_account['usertype'] == 'A' && in_array($token_data['table'], $allowed_tables));
    if (!$valid) return error('You are not permitted to edit this value');
    return $valid;
}

/**
 * Check unique productcode
 * @see hook for cw_can_edit_on_place()
 */
function cw_can_edit_on_place_productcode($token_data) {
    if ($token_data['table'] == 'products' && $token_data['field'] == 'productcode' && !empty($token_data['pk'])) {
        $rules = array(
        'productcode' => array('func' => 'cw_error_sku_exists'),
        );
        $product_data = array('productcode' => $value);
        $fillerror = cw_call('cw_error_check', array(&$product_data, $rules, 'P'));
        if ($fillerror) return error($fillerror);
    }
    return true;
}

/**
 * Special edit handlers
 */
 
// Product name
function cw_edit_on_place_product($token_data, $value) {
    $edited_language = &cw_session_register('edited_language');
    if ($token_data['table'] == 'products' && $token_data['field'] == 'product' && !empty($token_data['pk'])) {
        $lng_data = array(
            'product' => $value,
        );
        cw_array2update('products_lng', $lng_data, "code='$edited_language' AND product_id='{$token_data['pk']}'");
    }
}
